#!/usr/bin/env python3
"""\
This script for plotting results of llik_test.cpp

$LicenseInfo:firstyear=2016&license=viewerlgpl$
Second Life Viewer Source Code
Copyright (C) 2022, Linden Research, Inc.

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation;
version 2.1 of the License only.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

Linden Research, Inc., 945 Battery Street, San Francisco, CA  94111  USA
$/LicenseInfo$
"""


import matplotlib as mpl
import matplotlib.pyplot as plt
import matplotlib.animation as animation
import numpy as nu
import time

# ideally the test run will supply its own limits
# but we set these defaults just in case
xlim = [-1.0, 1.0]
ylim = [-1.0, 1.0]
zlim = [0.0, 1.0]


# PUT IK TEST DATA HERE
#joint_configs = []
#initial_data = []
#solution_data = []
#xlim=[]
#ylim=[]
#zlim=[]
joint_configs=[
    {'id':8,'p':(0.00834371,0.49807,0.470742)},
]

initial_data = [
    (0,(0,0,0), (0,0,0.08757)),
    (1,(0,0,0.08757), (-0.014445,0,0.213712)),
    (2,(-0.015318,0,0.301282), (-0.01,0,0.2151)),
    (3,(-0.025318,0,0.552282), (0,0,0.077)),
    (4,(-0.025318,0,0.628282), (0,0,0.079)),
    (5,(-0.046318,0.123583,0.793282), (0,0.10349,0)),
    (6,(-0.046318,0.227073,0.793282), (0,0.260152,0)),
    (7,(-0.046318,0.487225,0.793282), (0,0.2009,0)),
    (8,(-0.046318,0.688125,0.793282), (0.01274,0.09898,0.0147)),
]
solution_data = [
    ('loop',0),
    ('context','FABRIK:inward'),
    ('context','FABRIK:inward:outer_end'),
    (8,(-0.00623027,0.548743,0.556738), (0.014574,-0.0506727,-0.085996)),
    (7,(-0.0387468,0.498844,0.748607), (0.0325165,0.0498991,-0.191869)),
    (6,(-0.0458956,0.242234,0.79079), (0.00714888,0.25661,-0.042183)),
    (5,(-0.0462639,0.138767,0.792963), (0.000368312,0.103467,-0.0021733)),
    (4,(-0.0262039,0.005869,0.635247), (2.0206e-05,0.00448404,0.0788726)),
    (3,(-0.0253944,0.000506412,0.559441), (-0.000820095,0.00543315,0.0768037)),
    ('context','FABRIK:inward:outer_end'),
    (2,(-0.0155971,1.4028e-05,0.308433), (-0.00982631,0.000422072,0.215108)),
    (1,(-0.000503879,4.53186e-07,0.0947052), (-0.0142202,1.35708e-05,0.213727)),
    ('context','FABRIK:outward'),
    (1,(0,0,0.08757), (-0.0142483,1.35708e-05,0.213725)),
    ('context','FABRIK:outward:outer_end'),
    (2,(-0.0151213,1.35748e-05,0.301296), (-0.00999039,0.000410766,0.2151)),
    (3,(-0.0251101,0.000492772,0.552296), (-0.0010108,0.00498505,0.0768318)),
    (4,(-0.0261078,0.00541308,0.62813), (-6.96126e-05,0.00453095,0.0788699)),
    (5,(-0.0463554,0.138404,0.785744), (0.000457726,0.103367,0.00502318)),
    (6,(-0.0458977,0.241771,0.790767), (0.00713849,0.256626,-0.0420873)),
    (7,(-0.0387592,0.498397,0.74868), (0.0324992,0.0503,-0.191767)),
    ('context','FABRIK:outward:outer_end'),
    (8,(-0.00625996,0.548697,0.556913), (0.0145848,-0.0505613,-0.0860597)),
    (7,(-0.0387592,0.498397,0.74868), (0.0324992,0.0503,-0.191767)),
    (6,(-0.0458977,0.241771,0.790767), (0.00713849,0.256626,-0.0420873)),
    (1,(0,0,0.08757), (-0.0142483,1.35708e-05,0.213725)),
    (2,(-0.0151213,1.35748e-05,0.301296), (-0.00999039,0.000410766,0.2151)),
    (3,(-0.0251101,0.000492772,0.552296), (-0.0010108,0.00498505,0.0768318)),
    (4,(-0.0261078,0.00541308,0.62813), (-6.96126e-05,0.00453095,0.0788699)),
    (5,(-0.0463554,0.138404,0.785744), (0.000457726,0.103367,0.00502318)),
    (6,(-0.0458977,0.241771,0.790767), (0.0209119,0.257732,-0.0285673)),
    (7,(-0.0249858,0.499503,0.7622), (0.195299,0.0133494,0.0451777)),
    (8,(0.170313,0.512852,0.807378), (0.0582592,0.0670241,0.0478444)),
    ('max_error',0.450575),
    ('loop',1),
    ('context','FABRIK:inward'),
    ('context','FABRIK:inward:outer_end'),
    (8,(0.0520449,0.502058,0.56157), (-0.0437012,-0.00398842,-0.0908281)),
    (7,(-0.0199593,0.49967,0.749108), (0.0720041,0.00238881,-0.187538)),
    (6,(-0.0456631,0.244103,0.79039), (0.0257039,0.255566,-0.0412824)),
    (5,(-0.0463403,0.140715,0.785846), (0.000677161,0.103388,0.00454479)),
    (4,(-0.0262596,0.00642812,0.629313), (-5.60414e-05,0.00517038,0.0788306)),
    (3,(-0.0251288,0.000589123,0.553546), (-0.00114568,0.00591583,0.0767639)),
    ('context','FABRIK:inward:outer_end'),
    (2,(-0.0151709,1.64247e-05,0.302545), (-0.00996391,0.000490915,0.215101)),
    (1,(-8.79541e-05,9.52223e-08,0.0888163), (-0.0142099,1.63247e-05,0.213728)),
    ('context','FABRIK:outward'),
    (1,(0,0,0.08757), (-0.014215,1.63247e-05,0.213727)),
    ('context','FABRIK:outward:outer_end'),
    (2,(-0.015088,1.63295e-05,0.301298), (-0.0099924,0.000488567,0.2151)),
    (3,(-0.0250791,0.000586289,0.552298), (-0.00117633,0.00582446,0.0767704)),
    (4,(-0.0262401,0.00633511,0.628071), (-7.42935e-05,0.00518172,0.0788298)),
    (5,(-0.046359,0.140645,0.78458), (0.000694938,0.103325,0.00580299)),
    (6,(-0.045664,0.243969,0.790383), (0.0256919,0.255572,-0.0412542)),
    (7,(-0.0199721,0.499542,0.749129), (0.0720079,0.00251657,-0.187535)),
    ('context','FABRIK:outward:outer_end'),
    (8,(0.0520358,0.502058,0.561594), (-0.0436845,-0.00398746,-0.0908361)),
    (7,(-0.0199721,0.499542,0.749129), (0.0720079,0.00251657,-0.187535)),
    (6,(-0.045664,0.243969,0.790383), (0.0256919,0.255572,-0.0412542)),
    (1,(0,0,0.08757), (-0.014215,1.63247e-05,0.213727)),
    (2,(-0.015088,1.63295e-05,0.301298), (-0.00999239,0.000488567,0.2151)),
    (3,(-0.0250791,0.000586288,0.552298), (-0.00117633,0.00582446,0.0767703)),
    (4,(-0.0262401,0.0063351,0.628071), (-7.42935e-05,0.00518172,0.0788298)),
    (5,(-0.0463589,0.140644,0.78458), (0.000694938,0.103325,0.00580299)),
    (6,(-0.045664,0.243969,0.790383), (0.0415848,0.255751,-0.0232618)),
    (7,(-0.00407918,0.49972,0.767121), (0.155421,0.0264019,0.124531)),
    (8,(0.151342,0.526122,0.891652), (0.00831398,0.0382625,0.092964)),
    ('max_error',0.539777),
    ('loop',2),
    ('context','FABRIK:inward'),
    ('context','FABRIK:inward:outer_end'),
    (8,(0.0407281,0.504423,0.566064), (-0.0323844,-0.00635284,-0.0953223)),
    (7,(-0.00296083,0.499837,0.762103), (0.0436889,0.00458539,-0.196038)),
    (6,(-0.0455343,0.244746,0.790297), (0.0425735,0.255091,-0.0281941)),
    (5,(-0.0463528,0.141415,0.784622), (0.000818476,0.103331,0.00567484)),
    (4,(-0.0262916,0.00668056,0.628471), (-6.89812e-05,0.00539212,0.0788156)),
    (3,(-0.0250858,0.000620312,0.552723), (-0.00122159,0.00613999,0.076745)),
    ('context','FABRIK:inward:outer_end'),
    (2,(-0.0151048,1.73498e-05,0.301723), (-0.00998371,0.000516857,0.2151)),
    (1,(-2.9888e-05,3.43298e-08,0.0879938), (-0.014202,1.73104e-05,0.213728)),
    ('context','FABRIK:outward'),
    (1,(0,0,0.08757), (-0.0142037,1.73104e-05,0.213728)),
    ('context','FABRIK:outward:outer_end'),
    (2,(-0.0150767,1.73155e-05,0.301299), (-0.00999338,0.000516014,0.2151)),
    (3,(-0.0250689,0.000619293,0.552298), (-0.00123172,0.00610741,0.0767475)),
    (4,(-0.0262847,0.00664738,0.628049), (-7.54856e-05,0.00539636,0.0788153)),
    (5,(-0.0463595,0.14139,0.784191), (0.000824723,0.103306,0.00610334)),
    (6,(-0.0455347,0.244696,0.790294), (0.0425659,0.255093,-0.0281859)),
    (7,(-0.00296882,0.49979,0.762108), (0.0436951,0.00463298,-0.196036)),
    ('context','FABRIK:outward:outer_end'),
    (8,(0.0407263,0.504423,0.566072), (-0.0323804,-0.00635219,-0.0953237)),
    (6,(-0.0455347,0.244696,0.790294), (0.0425659,0.255093,-0.0281859)),
    (1,(0,0,0.08757), (-0.0142037,1.73104e-05,0.213728)),
    (2,(-0.0150767,1.73155e-05,0.301299), (-0.00999337,0.000516013,0.215099)),
    (3,(-0.0250689,0.000619293,0.552298), (-0.00123172,0.00610742,0.0767475)),
    (4,(-0.0262847,0.00664739,0.628049), (-7.54856e-05,0.00539637,0.0788155)),
    (5,(-0.0463595,0.14139,0.784191), (0.000824723,0.103307,0.00610334)),
    (6,(-0.0455348,0.244697,0.790294), (0.0597506,0.252914,-0.0119787)),
    (7,(0.0142158,0.497611,0.778315), (0.171087,-0.00223818,0.105285)),
    (8,(0.185303,0.495372,0.8836), (0.0763886,0.0517731,0.0407398)),
    ('max_error',0.521867),
    ('loop',3),
    ('context','FABRIK:inward'),
    ('context','FABRIK:inward:outer_end'),
    (8,(0.0480827,0.497464,0.563456), (-0.039739,0.000605762,-0.0927138)),
    (7,(0.0168023,0.497599,0.761906), (0.0312804,-0.000135213,-0.198449)),
    (6,(-0.0450917,0.246494,0.790092), (0.061894,0.251105,-0.0281864)),
    (5,(-0.046338,0.143175,0.784291), (0.00124631,0.10332,0.00580132)),
    (4,(-0.0264037,0.00745814,0.628977), (-6.06291e-05,0.00588013,0.0787809)),
    (3,(-0.0250862,0.000707633,0.553289), (-0.0013349,0.00683933,0.0766841)),
    ('context','FABRIK:inward:outer_end'),
    (2,(-0.015116,2.0026e-05,0.302289), (-0.00997445,0.000589414,0.2151)),
    (1,(-6.95018e-05,9.20772e-08,0.0885572), (-0.0141735,1.99281e-05,0.21373)),
    ('context','FABRIK:outward'),
    (1,(0,0,0.08757), (-0.0141775,1.99281e-05,0.21373)),
    ('context','FABRIK:outward:outer_end'),
    (2,(-0.0150505,1.99339e-05,0.301301), (-0.00999685,0.00058718,0.215099)),
    (3,(-0.0250468,0.000704934,0.5523), (-0.00135691,0.00675552,0.0766911)),
    (4,(-0.0263861,0.00737272,0.627995), (-7.7324e-05,0.00589203,0.0787799)),
    (5,(-0.0463552,0.143112,0.783284), (0.00126199,0.103259,0.00679994)),
    (6,(-0.0450932,0.246371,0.790084), (0.0618673,0.251114,-0.0281655)),
    (7,(0.0167742,0.497485,0.761919), (0.0313059,-2.09212e-05,-0.198446)),
    ('context','FABRIK:outward:outer_end'),
    (8,(0.04808,0.497464,0.563473), (-0.0397305,0.000605732,-0.0927175)),
    (7,(0.0167742,0.497485,0.761919), (0.0313059,-2.09212e-05,-0.198446)),
    (6,(-0.0450932,0.246371,0.790084), (0.0618673,0.251114,-0.0281655)),
    (1,(0,0,0.08757), (-0.0141775,1.99281e-05,0.21373)),
    (2,(-0.0150505,1.99339e-05,0.301301), (-0.00999687,0.000587181,0.215099)),
    (3,(-0.0250468,0.000704935,0.5523), (-0.00135691,0.00675551,0.076691)),
    (4,(-0.0263861,0.00737271,0.627995), (-7.7324e-05,0.00589202,0.0787799)),
    (5,(-0.0463552,0.143112,0.783284), (0.00126199,0.103259,0.00679994)),
    (6,(-0.0450932,0.246371,0.790084), (0.0815984,0.246712,-0.0124037)),
    (7,(0.0365053,0.493083,0.777681), (0.195586,-0.0450491,0.00879037)),
    (8,(0.232092,0.448034,0.786471), (0.070868,-0.0703438,0.0143141)),
    ('max_error',0.458496),
    ('loop',4),
    ('context','FABRIK:inward'),
    ('context','FABRIK:inward:outer_end'),
    (8,(0.0661872,0.485135,0.552365), (-0.0578435,0.0129353,-0.0816225)),
    (7,(0.0399644,0.492157,0.751422), (0.0262228,-0.0070222,-0.199057)),
    (6,(-0.0441895,0.248982,0.789674), (0.084154,0.243175,-0.0382515)),
    (5,(-0.0463022,0.145702,0.783441), (0.00211266,0.103281,0.00623292)),
    (4,(-0.0265591,0.00857466,0.629346), (-4.82127e-05,0.00658459,0.078725)),
    (3,(-0.0250753,0.000853405,0.553754), (-0.00150333,0.00782285,0.0765867)),
    ('context','FABRIK:inward:outer_end'),
    (2,(-0.0151082,2.47301e-05,0.302754), (-0.00997188,0.000710339,0.2151)),
    (1,(-0.000101775,1.6659e-07,0.0890196), (-0.0141334,2.45563e-05,0.213733)),
    ('context','FABRIK:outward'),
    (1,(0,0,0.08757), (-0.0141392,2.45563e-05,0.213732)),
    ('context','FABRIK:outward:outer_end'),
    (2,(-0.0150122,2.45635e-05,0.301304), (-0.0100045,0.000706395,0.215099)),
    (3,(-0.0250175,0.000848639,0.552302), (-0.00153243,0.00768336,0.0766003)),
    (4,(-0.02653,0.00843222,0.627907), (-7.59736e-05,0.00660618,0.0787232)),
    (5,(-0.046331,0.145601,0.781958), (0.00213729,0.103181,0.00770104)),
    (6,(-0.0441937,0.248782,0.789659), (0.0840978,0.243201,-0.0382091)),
    (7,(0.0399041,0.491983,0.751449), (0.0262793,-0.00684696,-0.199056)),
    ('context','FABRIK:outward:outer_end'),
    (8,(0.0661834,0.485136,0.552394), (-0.0578275,0.0129316,-0.0816343)),
    (6,(-0.0441937,0.248782,0.789659), (0.0840978,0.243201,-0.0382092)),
    (1,(0,0,0.08757), (-0.0141392,2.45563e-05,0.213732)),
    (2,(-0.0150122,2.45635e-05,0.301304), (-0.0100045,0.000706395,0.215098)),
    (3,(-0.0250175,0.000848639,0.552302), (-0.00153243,0.00768337,0.0766004)),
    (4,(-0.02653,0.00843223,0.627907), (-7.59736e-05,0.00660618,0.0787233)),
    (5,(-0.046331,0.145601,0.781958), (0.00213729,0.103181,0.00770104)),
    (6,(-0.0441937,0.248782,0.789659), (0.107404,0.235808,-0.0231948)),
    (7,(0.0632108,0.484589,0.766464), (0.18216,-0.0184072,0.0827019)),
    (8,(0.245371,0.466182,0.849166), (0.0691017,0.0624492,0.0387359)),
    ('max_error',0.518335),
    ('loop',5),
    ('context','FABRIK:inward'),
    ('context','FABRIK:inward:outer_end'),
    (8,(0.0617536,0.490885,0.556013), (-0.0534099,0.00718537,-0.0852711)),
    (7,(0.063144,0.484878,0.756819), (-0.00139036,0.00600678,-0.200805)),
    (6,(-0.0436724,0.249928,0.789499), (0.106816,0.234949,-0.0326805)),
    (5,(-0.0463019,0.146741,0.78204), (0.00262951,0.103187,0.0074591)),
    (4,(-0.0266074,0.00897396,0.628511), (-6.0657e-05,0.00690628,0.0786976)),
    (3,(-0.0250311,0.000918355,0.552956), (-0.00159707,0.0081616,0.0765496)),
    ('context','FABRIK:inward:outer_end'),
    (2,(-0.0150382,2.6884e-05,0.301957), (-0.00999388,0.000764166,0.215099)),
    (1,(-4.57261e-05,8.17454e-08,0.0882219), (-0.0141195,2.67944e-05,0.213734)),
    ('context','FABRIK:outward'),
    (1,(0,0,0.08757), (-0.0141221,2.67944e-05,0.213733)),
    ('context','FABRIK:outward:outer_end'),
    (2,(-0.0149951,2.68023e-05,0.301305), (-0.0100085,0.000762253,0.215098)),
    (3,(-0.0250051,0.000916041,0.552303), (-0.00160952,0.00809556,0.0765563)),
    (4,(-0.0265937,0.00890646,0.627865), (-7.38017e-05,0.00691686,0.0786966)),
    (5,(-0.0463156,0.146694,0.781372), (0.00264071,0.103137,0.00811964)),
    (6,(-0.0436749,0.249831,0.789491), (0.106783,0.234967,-0.0326618)),
    (7,(0.0631078,0.484798,0.75683), (-0.00135408,0.00608602,-0.200803)),
    ('context','FABRIK:outward:outer_end'),
    (8,(0.0617537,0.490884,0.556027), (-0.0534039,0.00718492,-0.0852749)),
    (7,(0.0631078,0.484798,0.75683), (-0.00135409,0.00608602,-0.200803)),
    (6,(-0.0436749,0.249831,0.789491), (0.106783,0.234967,-0.0326618)),
    (1,(0,0,0.08757), (-0.0141221,2.67944e-05,0.213733)),
    (2,(-0.0149951,2.68023e-05,0.301305), (-0.0100085,0.000762252,0.215098)),
    (3,(-0.0250051,0.00091604,0.552302), (-0.00160953,0.00809556,0.0765563)),
    (4,(-0.0265937,0.00890646,0.627864), (-7.38017e-05,0.00691686,0.0786966)),
    (5,(-0.0463156,0.146694,0.781372), (0.00264071,0.103137,0.0081197)),
    (6,(-0.0436749,0.249831,0.789491), (0.130249,0.224131,-0.0218989)),
    (7,(0.0865744,0.473962,0.767592), (0.139256,-0.11362,-0.0897717)),
    (8,(0.22583,0.360341,0.677821), (0.0460948,-0.0894239,-0.00735414)),
    ('max_error',0.401202),
    ('loop',6),
    ('context','FABRIK:inward'),
    ('context','FABRIK:inward:outer_end'),
    (8,(0.0747478,0.456018,0.533968), (-0.0664041,0.042052,-0.0632263)),
    (7,(0.084875,0.471384,0.734024), (-0.0101272,-0.0153655,-0.200055)),
    (6,(-0.042728,0.251463,0.789083), (0.127603,0.219921,-0.055059)),
    (5,(-0.0462602,0.148312,0.781491), (0.00353221,0.103151,0.00759196)),
    (4,(-0.0267034,0.00968404,0.628721), (-4.74881e-05,0.00733971,0.0786583)),
    (3,(-0.0250258,0.00102305,0.553235), (-0.00169966,0.00877495,0.0764795)),
    ('context','FABRIK:inward:outer_end'),
    (2,(-0.0150323,3.04877e-05,0.302237), (-0.00999444,0.000850824,0.215098)),
    (1,(-6.51125e-05,1.32059e-07,0.0884998), (-0.0140941,3.03467e-05,0.213735)),
    ('context','FABRIK:outward'),
    (1,(0,0,0.08757), (-0.0140979,3.03467e-05,0.213735)),
    ('context','FABRIK:outward:outer_end'),
    (2,(-0.0149709,3.03556e-05,0.301306), (-0.0100152,0.000847792,0.215097)),
    (3,(-0.0249886,0.00101938,0.552303), (-0.00171619,0.00867422,0.0764906)),
    (4,(-0.0266825,0.00958095,0.627801), (-6.75675e-05,0.00735654,0.0786567)),
    (5,(-0.0462812,0.148241,0.780535), (0.00354826,0.103076,0.00853527)),
    (6,(-0.042733,0.251318,0.789071), (0.127548,0.219962,-0.055021)),
    (7,(0.0848149,0.47128,0.73405), (-0.0100663,-0.0152607,-0.200066)),
    ('context','FABRIK:outward:outer_end'),
    (8,(0.0747486,0.456019,0.533983), (-0.0663987,0.0420469,-0.0632353)),
    (6,(-0.042733,0.251318,0.789071), (0.127548,0.219962,-0.0550209)),
    (1,(0,0,0.08757), (-0.0140979,3.03467e-05,0.213735)),
    (2,(-0.0149709,3.03556e-05,0.301306), (-0.0100152,0.000847793,0.215098)),
    (3,(-0.0249886,0.00101938,0.552304), (-0.00171619,0.00867422,0.0764906)),
    (4,(-0.0266825,0.00958096,0.627801), (-6.75656e-05,0.00735654,0.0786567)),
    (5,(-0.0462813,0.148241,0.780536), (0.00354826,0.103076,0.00853527)),
    (6,(-0.042733,0.251318,0.789071), (0.151663,0.206161,-0.0466369)),
    (7,(0.10893,0.457479,0.742434), (0.197939,-0.0338919,0.00566804)),
    (8,(0.306869,0.423587,0.748102), (0.0735413,0.0608799,0.0325691)),
    ('max_error',0.484433),
    ('loop',7),
    ('context','FABRIK:inward'),
    ('context','FABRIK:inward:outer_end'),
    (8,(0.0810392,0.479932,0.538283), (-0.0726954,0.0181377,-0.0675414)),
    (7,(0.108073,0.458169,0.736163), (-0.0270339,0.0217636,-0.197879)),
    (6,(-0.042014,0.252304,0.788819), (0.150087,0.205865,-0.0526559)),
    (5,(-0.0462409,0.149226,0.780614), (0.00422683,0.103078,0.00820464)),
    (4,(-0.0267497,0.0100606,0.628326), (-4.91794e-05,0.0076113,0.0786325)),
    (3,(-0.0250019,0.00108764,0.552878), (-0.00177078,0.00909102,0.0764409)),
    ('context','FABRIK:inward:outer_end'),
    (2,(-0.0149938,3.27661e-05,0.30188), (-0.010007,0.000904232,0.215098)),
    (1,(-4.00404e-05,8.75007e-08,0.0881423), (-0.0140807,3.2669e-05,0.213736)),
    ('context','FABRIK:outward'),
    (1,(0,0,0.08757), (-0.014083,3.2669e-05,0.213736)),
    ('context','FABRIK:outward:outer_end'),
    (2,(-0.014956,3.26786e-05,0.301307), (-0.0100197,0.000902246,0.215097)),
    (3,(-0.024979,0.00108523,0.552304), (-0.0017805,0.00902661,0.0764483)),
    (4,(-0.0267364,0.00999461,0.62776), (-6.20391e-05,0.00762231,0.0786315)),
    (5,(-0.0462544,0.149181,0.780026), (0.00423654,0.103029,0.00878525)),
    (6,(-0.0420179,0.252211,0.788811), (0.150048,0.205899,-0.0526329)),
    (7,(0.10803,0.45811,0.736178), (-0.0269889,0.0218208,-0.197879)),
    ('context','FABRIK:outward:outer_end'),
    (8,(0.0810412,0.479931,0.538299), (-0.0726889,0.0181372,-0.0675485)),
    (7,(0.10803,0.45811,0.736178), (-0.026989,0.0218208,-0.197879)),
    (6,(-0.0420179,0.252211,0.788811), (0.150048,0.205899,-0.0526329)),
    (1,(0,0,0.08757), (-0.014083,3.2669e-05,0.213736)),
    (2,(-0.014956,3.26786e-05,0.301307), (-0.0100197,0.000902245,0.215097)),
    (3,(-0.024979,0.00108523,0.552304), (-0.0017805,0.00902661,0.0764484)),
    (4,(-0.0267364,0.00999461,0.62776), (-6.20391e-05,0.00762231,0.0786315)),
    (5,(-0.0462544,0.149181,0.780025), (0.00423655,0.10303,0.00878525)),
    (6,(-0.0420179,0.252211,0.788811), (0.171472,0.189034,-0.0504246)),
    (7,(0.129454,0.441245,0.738386), (0.0287761,-0.173295,-0.0974755)),
    (8,(0.15823,0.26795,0.640911), (0.0145178,-0.098251,0.0176472)),
    ('max_error',0.41247),
    ('loop',8),
    ('context','FABRIK:inward'),
    ('context','FABRIK:inward:outer_end'),
    (8,(0.0551424,0.42622,0.523873), (-0.0467987,0.0718498,-0.0531313)),
    (7,(0.120761,0.439487,0.713291), (-0.0656184,-0.0132673,-0.189418)),
    (6,(-0.0425089,0.251646,0.789038), (0.16327,0.187842,-0.0757477)),
    (5,(-0.0462748,0.148622,0.779976), (0.00376596,0.103024,0.00906223)),
    (4,(-0.0266977,0.00972028,0.627458), (-7.19335e-05,0.00747864,0.0786452)),
    (3,(-0.0249715,0.00104738,0.551975), (-0.00174896,0.00878702,0.076477)),
    ('context','FABRIK:inward:outer_end'),
    (2,(-0.0149429,3.13438e-05,0.300978), (-0.0100245,0.000870938,0.215097)),
    (1,(2.30521e-05,-4.83524e-08,0.0872408), (-0.0140929,3.13829e-05,0.213735)),
    ('context','FABRIK:outward'),
    (1,(0,0,0.08757), (-0.0140916,3.13829e-05,0.213735)),
    ('context','FABRIK:outward:outer_end'),
    (2,(-0.0149646,3.13921e-05,0.301307), (-0.0100172,0.000872042,0.215097)),
    (3,(-0.0249846,0.00104871,0.552304), (-0.00174323,0.0088232,0.0764729)),
    (4,(-0.0267052,0.00975732,0.627783), (-6.47176e-05,0.00747255,0.0786458)),
    (5,(-0.0462673,0.148648,0.780314), (0.00376038,0.103053,0.0087291)),
    (6,(-0.0425069,0.251701,0.789043), (0.163293,0.187815,-0.0757638)),
    (7,(0.120786,0.439516,0.713279), (-0.0656437,-0.013296,-0.189407)),
    ('context','FABRIK:outward:outer_end'),
    (8,(0.0551421,0.42622,0.523872), (-0.0467987,0.0718504,-0.0531306)),
    (6,(-0.0425069,0.251701,0.789043), (0.163293,0.187815,-0.0757638)),
    (1,(0,0,0.08757), (-0.0140916,3.13829e-05,0.213735)),
    (2,(-0.0149646,3.13921e-05,0.301307), (-0.0100172,0.000872043,0.215097)),
    (3,(-0.0249846,0.00104871,0.552304), (-0.00174323,0.0088232,0.0764729)),
    (4,(-0.0267052,0.00975732,0.627784), (-6.47176e-05,0.00747255,0.0786458)),
    (5,(-0.0462673,0.148648,0.780314), (0.00376038,0.103053,0.0087291)),
    (6,(-0.0425069,0.251701,0.789043), (0.180945,0.171574,-0.0741656)),
    (7,(0.138438,0.423275,0.714878), (0.15116,-0.0216509,-0.130548)),
    (8,(0.289597,0.401624,0.584329), (0.097045,0.0229033,0.0152695)),
    ('max_error',0.406353),
    ('loop',9),
    ('context','FABRIK:inward'),
    ('context','FABRIK:inward:outer_end'),
    (8,(0.0974799,0.467504,0.506741), (-0.0891361,0.0305661,-0.0359986)),
    (7,(0.135453,0.426498,0.69971), (-0.0379732,0.0410061,-0.19297)),
    (6,(-0.0392772,0.254873,0.787422), (0.17473,0.171625,-0.0877117)),
    (5,(-0.0460575,0.151836,0.780527), (0.00678033,0.103037,0.00689453)),
    (4,(-0.0269164,0.0113077,0.62945), (1.73934e-05,0.00829937,0.0785629)),
    (3,(-0.0250305,0.00129245,0.554137), (-0.00191068,0.010147,0.0763046)),
    ('context','FABRIK:inward:outer_end'),
    (2,(-0.0150375,4.05337e-05,0.30314), (-0.00999398,0.00107314,0.215098)),
    (1,(-0.000127576,3.4388e-07,0.0893989), (-0.014037,4.0178e-05,0.213739)),
    ('context','FABRIK:outward'),
    (1,(0,0,0.08757), (-0.0140443,4.0178e-05,0.213739)),
    ('context','FABRIK:outward:outer_end'),
    (2,(-0.0149173,4.01898e-05,0.30131), (-0.0100342,0.00106566,0.215096)),
    (3,(-0.0249573,0.00128338,0.552305), (-0.00193817,0.00992178,0.0763335)),
    (4,(-0.0268703,0.0110763,0.627648), (-2.80868e-05,0.00833892,0.0785587)),
    (5,(-0.0461064,0.151679,0.778643), (0.00680937,0.102894,0.0087536)),
    (6,(-0.039297,0.254573,0.787396), (0.174614,0.171791,-0.0876181)),
    (7,(0.135317,0.426364,0.699778), (-0.0378248,0.0411259,-0.192974)),
    ('context','FABRIK:outward:outer_end'),
    (8,(0.0974924,0.46749,0.506805), (-0.089115,0.0305683,-0.0360491)),
    (7,(0.135317,0.426364,0.699778), (-0.0378248,0.0411259,-0.192974)),
    (6,(-0.039297,0.254573,0.787396), (0.174614,0.171791,-0.0876181)),
    (1,(0,0,0.08757), (-0.0140443,4.0178e-05,0.213739)),
    (2,(-0.0149173,4.01898e-05,0.30131), (-0.0100342,0.00106566,0.215095)),
    (3,(-0.0249572,0.00128338,0.552305), (-0.00193817,0.00992178,0.0763335)),
    (4,(-0.0268702,0.0110763,0.627647), (-2.80868e-05,0.00833892,0.0785587)),
    (5,(-0.0461064,0.151679,0.778643), (0.00680937,0.102894,0.0087536)),
    (6,(-0.039297,0.254573,0.787396), (0.189245,0.150526,-0.0959575)),
    (7,(0.149948,0.405099,0.691439), (-0.0390407,-0.189565,-0.0538675)),
    (8,(0.110907,0.215534,0.637571), (0.0180857,-0.0810913,0.0572063)),
    ('max_error',0.443816),
    ('loop',10),
    ('context','FABRIK:inward'),
    ('context','FABRIK:inward:outer_end'),
    (8,(0.0384391,0.415165,0.519695), (-0.0300954,0.0829054,-0.0489532)),
    (7,(0.147709,0.405301,0.687991), (-0.10927,0.0098637,-0.168296)),
    (6,(-0.0394458,0.254453,0.787475), (0.187155,0.150848,-0.0994843)),
    (5,(-0.0461143,0.151558,0.778632), (0.00666841,0.102896,0.00884312)),
    (4,(-0.026862,0.0110158,0.627582), (-3.1298e-05,0.00830801,0.078562)),
    (3,(-0.0249554,0.0012741,0.552233), (-0.00193162,0.00986993,0.0763404)),
    ('context','FABRIK:inward:outer_end'),
    (2,(-0.0149144,3.98348e-05,0.301238), (-0.0100351,0.00105801,0.215095)),
    (1,(5.03752e-06,-1.34532e-08,0.0874978), (-0.0140465,3.98365e-05,0.213738)),
    ('context','FABRIK:outward'),
    (1,(0,0,0.08757), (-0.0140462,3.98365e-05,0.213738)),
    ('context','FABRIK:outward:outer_end'),
    (2,(-0.0149192,3.98482e-05,0.30131), (-0.0100335,0.0010583,0.215095)),
    (3,(-0.0249583,0.00127445,0.552305), (-0.00193054,0.00987871,0.0763392)),
    (4,(-0.0268638,0.0110249,0.627653), (-2.95267e-05,0.00830647,0.0785621)),
    (5,(-0.0461124,0.151564,0.778706), (0.00666734,0.102902,0.00877035)),
    (6,(-0.039445,0.254466,0.787476), (0.18716,0.15084,-0.0994883)),
    (7,(0.147715,0.405305,0.687988), (-0.109276,0.0098592,-0.168293)),
    ('context','FABRIK:outward:outer_end'),
    (8,(0.0384392,0.415165,0.519695), (-0.0300955,0.0829053,-0.0489534)),
    (6,(-0.039445,0.254466,0.787476), (0.18716,0.15084,-0.0994883)),
    (1,(0,0,0.08757), (-0.0140462,3.98365e-05,0.213738)),
    (2,(-0.0149192,3.98482e-05,0.30131), (-0.0100335,0.0010583,0.215096)),
    (3,(-0.0249583,0.00127445,0.552305), (-0.00193054,0.00987871,0.0763392)),
    (4,(-0.0268638,0.0110249,0.627653), (-2.95267e-05,0.00830647,0.0785622)),
    (5,(-0.0461124,0.151564,0.778706), (0.00666734,0.102902,0.00877035)),
    (6,(-0.039445,0.254466,0.787477), (0.196168,0.130737,-0.110024)),
    (7,(0.156723,0.385203,0.677453), (0.0655379,0.0496416,-0.183307)),
    (8,(0.222261,0.434844,0.494146), (0.0951938,-0.000223964,-0.0333697)),
    ('max_error',0.315713),
    ('loop',11),
    ('context','FABRIK:inward'),
    ('context','FABRIK:inward:outer_end'),
    (8,(0.104552,0.469634,0.481268), (-0.0962085,0.0284355,-0.0105261)),
    (7,(0.152224,0.392484,0.660533), (-0.0476716,0.0771501,-0.179265)),
    (6,(-0.0337331,0.258579,0.783694), (0.185957,0.133906,-0.12316)),
    (5,(-0.0456126,0.155885,0.778908), (0.0118795,0.102694,0.00478595)),
    (4,(-0.0271361,0.0131289,0.62985), (0.000144701,0.00943113,0.078435)),
    (3,(-0.025027,0.00164845,0.554752), (-0.00213683,0.0116315,0.0760864)),
    ('context','FABRIK:inward:outer_end'),
    (2,(-0.0150168,5.53806e-05,0.303757), (-0.0100088,0.00136558,0.215095)),
    (1,(-0.000169631,6.25587e-07,0.0900121), (-0.0139741,5.47389e-05,0.213743)),
    ('context','FABRIK:outward'),
    (1,(0,0,0.08757), (-0.013984,5.47389e-05,0.213743)),
    ('context','FABRIK:outward:outer_end'),
    (2,(-0.0148569,5.4755e-05,0.301314), (-0.0100616,0.00135293,0.215093)),
    (3,(-0.0249289,0.00163307,0.552306), (-0.0021668,0.0112917,0.0761367)),
    (4,(-0.0270675,0.0127781,0.627454), (7.38874e-05,0.00949113,0.0784279)),
    (5,(-0.0456921,0.155646,0.776386), (0.0119138,0.102544,0.00727963)),
    (6,(-0.0337784,0.25819,0.783666), (0.185845,0.134181,-0.123029)),
    (7,(0.152067,0.392371,0.660637), (-0.0474915,0.0772252,-0.179281)),
    ('context','FABRIK:outward:outer_end'),
    (8,(0.104575,0.469596,0.481356), (-0.0961916,0.0284617,-0.0106099)),
    (7,(0.152067,0.392371,0.660637), (-0.0474914,0.0772252,-0.179281)),
    (6,(-0.0337784,0.25819,0.783666), (0.185845,0.134182,-0.123029)),
    (1,(0,0,0.08757), (-0.013984,5.47389e-05,0.213743)),
    (2,(-0.0148569,5.4755e-05,0.301314), (-0.0100616,0.00135293,0.215092)),
    (3,(-0.0249289,0.00163307,0.552306), (-0.0021668,0.0112917,0.0761367)),
    (4,(-0.0270675,0.0127781,0.627454), (7.38874e-05,0.00949113,0.0784279)),
    (5,(-0.0456921,0.155646,0.776386), (0.0119138,0.102544,0.00727963)),
    (6,(-0.0337784,0.25819,0.783666), (0.184239,0.112604,-0.145105)),
    (7,(0.150461,0.370794,0.638561), (-0.0713939,-0.18626,-0.0238951)),
    (8,(0.0790672,0.184534,0.614666), (0.0584229,-0.0736304,0.0366167)),
    ('max_error',0.446286),
    ('loop',12),
    ('context','FABRIK:inward'),
    ('context','FABRIK:inward:outer_end'),
    (8,(0.0286015,0.408262,0.511967), (-0.0202578,0.0898085,-0.0412252)),
    (7,(0.164864,0.366365,0.653523), (-0.136262,0.0418963,-0.141556)),
    (6,(-0.0331668,0.258523,0.783265), (0.198031,0.107843,-0.129742)),
    (5,(-0.0456469,0.156017,0.776411), (0.0124802,0.102506,0.00685418)),
    (4,(-0.0270917,0.0129645,0.627648), (8.99695e-05,0.00958547,0.0784163)),
    (3,(-0.0249351,0.00166576,0.552523), (-0.00218498,0.0114474,0.076113)),
    ('context','FABRIK:inward:outer_end'),
    (2,(-0.0148657,5.61463e-05,0.301531), (-0.0100595,0.00137975,0.215092)),
    (1,(-1.50315e-05,5.67707e-08,0.0877863), (-0.0139776,5.6073e-05,0.213743)),
    ('context','FABRIK:outward'),
    (1,(0,0,0.08757), (-0.0139785,5.6073e-05,0.213743)),
    ('context','FABRIK:outward:outer_end'),
    (2,(-0.0148515,5.60895e-05,0.301315), (-0.0100642,0.00137861,0.215092)),
    (3,(-0.0249264,0.00166437,0.552306), (-0.00218759,0.0114169,0.0761175)),
    (4,(-0.0270856,0.012933,0.627435), (8.35955e-05,0.00959088,0.0784157)),
    (5,(-0.0456541,0.155996,0.776187), (0.0124829,0.10249,0.00707555)),
    (6,(-0.0331712,0.258486,0.783263), (0.198022,0.107872,-0.129731)),
    (7,(0.164851,0.366358,0.653532), (-0.13625,0.0419036,-0.141565)),
    ('context','FABRIK:outward:outer_end'),
    (8,(0.0286006,0.408262,0.511966), (-0.0202571,0.0898089,-0.0412246)),
    (6,(-0.0331712,0.258486,0.783263), (0.198022,0.107872,-0.129731)),
    (1,(0,0,0.08757), (-0.0139785,5.6073e-05,0.213743)),
    (2,(-0.0148515,5.60895e-05,0.301315), (-0.0100642,0.00137861,0.215092)),
    (3,(-0.0249264,0.00166437,0.552306), (-0.00218759,0.0114169,0.0761175)),
    (4,(-0.0270856,0.012933,0.627435), (8.35955e-05,0.00959088,0.0784157)),
    (5,(-0.0456541,0.155996,0.776187), (0.0124829,0.10249,0.00707555)),
    (6,(-0.0331712,0.258486,0.783263), (0.190713,0.0870631,-0.154038)),
    (7,(0.157542,0.345549,0.629225), (-0.008094,0.140685,-0.143189)),
    (8,(0.149448,0.486234,0.486036), (0.0657865,0.0154,-0.0749027)),
    ('max_error',0.215336),
    ('loop',13),
    ('context','FABRIK:inward'),
    ('context','FABRIK:inward:outer_end'),
    (8,(0.108283,0.489687,0.481574), (-0.0999392,0.00838307,-0.0108319)),
    (7,(0.154932,0.353185,0.621402), (-0.0466495,0.136501,-0.139828)),
    (6,(-0.0293045,0.260433,0.779936), (0.184237,0.0927528,-0.158534)),
    (5,(-0.0453009,0.158252,0.776268), (0.0159964,0.10218,0.00366729)),
    (4,(-0.0272244,0.0140404,0.62857), (0.000202632,0.0101777,0.0783415)),
    (3,(-0.0249649,0.0018717,0.553584), (-0.00228922,0.0123288,0.0759721)),
    ('context','FABRIK:inward:outer_end'),
    (2,(-0.0149027,6.52896e-05,0.302593), (-0.0100533,0.00154845,0.215092)),
    (1,(-8.84049e-05,3.87306e-07,0.0888455), (-0.0139413,6.48831e-05,0.213745)),
    ('context','FABRIK:outward'),
    (1,(0,0,0.08757), (-0.0139465,6.48831e-05,0.213745)),
    ('context','FABRIK:outward:outer_end'),
    (2,(-0.0148195,6.49022e-05,0.301317), (-0.0100806,0.00154094,0.215091)),
    (3,(-0.0249135,0.00186255,0.552307), (-0.0023028,0.0121388,0.0760023)),
    (4,(-0.0271864,0.0138437,0.627322), (0.000162072,0.0102112,0.0783373)),
    (5,(-0.0453478,0.158118,0.77495), (0.0160131,0.102122,0.00497645)),
    (6,(-0.0293347,0.26024,0.779926), (0.184208,0.0929152,-0.158473)),
    (7,(0.154873,0.353155,0.621453), (-0.0465802,0.136503,-0.13985)),
    ('context','FABRIK:outward:outer_end'),
    (8,(0.108293,0.489658,0.481603), (-0.0999339,0.00841042,-0.0108597)),
    (6,(-0.0293347,0.26024,0.779926), (0.184208,0.0929153,-0.158473)),
    (1,(0,0,0.08757), (-0.0139465,6.48831e-05,0.213745)),
    (2,(-0.0148195,6.49022e-05,0.301317), (-0.0100806,0.00154094,0.215091)),
    (3,(-0.0249135,0.00186255,0.552307), (-0.0023028,0.0121388,0.0760022)),
    (4,(-0.0271864,0.0138437,0.627322), (0.000162072,0.0102112,0.0783371)),
    (5,(-0.0453478,0.158118,0.77495), (0.0160131,0.102123,0.00497645)),
    (6,(-0.0293347,0.26024,0.779926), (0.166135,0.0896564,-0.178997)),
    (7,(0.136801,0.349897,0.600929), (0.187223,0.0285201,-0.0670469)),
    (8,(0.324023,0.378417,0.533882), (0.00567052,0.0819864,-0.0584937)),
    ('max_error',0.323583),
    ('loop',14),
    ('context','FABRIK:inward'),
    ('context','FABRIK:inward:outer_end'),
    (8,(0.101061,0.462927,0.489287), (-0.0927173,0.035143,-0.0185448)),
    (7,(0.145154,0.323479,0.627022), (-0.0440926,0.139448,-0.137736)),
    (6,(-0.0436176,0.255064,0.792442), (0.188771,0.0684157,-0.16542)),
    (5,(-0.0454349,0.153234,0.774069), (0.00181734,0.10183,0.0183737)),
    (4,(-0.0268273,0.0111003,0.624434), (8.50875e-05,0.00910579,0.0784734)),
    (3,(-0.0248278,0.00144874,0.549076), (-0.00202578,0.00977859,0.0763496)),
    ('context','FABRIK:inward:outer_end'),
    (2,(-0.0146889,4.68518e-05,0.298085), (-0.010119,0.00120169,0.215091)),
    (1,(0.000225048,-7.17813e-07,0.0843447), (-0.014041,4.75556e-05,0.213739)),
    ('context','FABRIK:outward'),
    (1,(0,0,0.08757), (-0.0140276,4.75556e-05,0.21374)),
    ('context','FABRIK:outward:outer_end'),
    (2,(-0.0149006,4.75696e-05,0.301311), (-0.0100485,0.00121673,0.215094)),
    (3,(-0.0249572,0.001467,0.552305), (-0.00197881,0.0101845,0.0762978)),
    (4,(-0.0269103,0.0115192,0.627612), (0.000175213,0.00905426,0.0784793)),
    (5,(-0.0453295,0.153557,0.777361), (0.00172621,0.102352,0.015207)),
    (6,(-0.0436033,0.255909,0.792568), (0.188867,0.0676094,-0.165642)),
    (7,(0.145263,0.323519,0.626926), (-0.0442178,0.139457,-0.137687)),
    ('context','FABRIK:outward:outer_end'),
    (8,(0.101046,0.462975,0.489239), (-0.0927385,0.0351086,-0.0185044)),
    (6,(-0.0436033,0.255909,0.792568), (0.188867,0.0676094,-0.165642)),
    (1,(0,0,0.08757), (-0.0140276,4.75556e-05,0.21374)),
    (2,(-0.0149006,4.75696e-05,0.301311), (-0.0100484,0.00121673,0.215094)),
    (3,(-0.0249572,0.001467,0.552305), (-0.00197881,0.0101845,0.0762979)),
    (4,(-0.0269103,0.0115192,0.627612), (0.000175213,0.00905425,0.0784792)),
    (5,(-0.0453295,0.153557,0.77736), (0.00172621,0.102352,0.015207)),
    (6,(-0.0436033,0.255909,0.792567), (0.174896,0.0668297,-0.180622)),
    (7,(0.131292,0.322739,0.611945), (0.191437,-0.047758,-0.0378427)),
    (8,(0.322729,0.274981,0.574102), (0.0587349,0.0469736,-0.0672245)),
    ('max_error',0.414175),
    ('loop',15),
    ('context','FABRIK:inward'),
    ('context','FABRIK:inward:outer_end'),
    (8,(0.0878029,0.441685,0.496866), (-0.0794592,0.0563846,-0.0261238)),
    (7,(0.13886,0.302041,0.631971), (-0.0510572,0.139645,-0.135105)),
    (6,(-0.0529995,0.253534,0.800838), (0.191859,0.0485069,-0.168867)),
    (5,(-0.0452917,0.153064,0.777245), (-0.00770781,0.10047,0.0235929)),
    (4,(-0.0268725,0.0112285,0.627304), (0.000180904,0.00894918,0.0784913)),
    (3,(-0.0249485,0.00142267,0.551964), (-0.00194937,0.00993481,0.0763315)),
    ('context','FABRIK:inward:outer_end'),
    (2,(-0.014887,4.56986e-05,0.30097), (-0.0100527,0.00118033,0.215094)),
    (1,(2.37562e-05,-7.29233e-08,0.0872295), (-0.0140377,4.5758e-05,0.213739)),
    ('context','FABRIK:outward'),
    (1,(0,0,0.08757), (-0.0140363,4.5758e-05,0.213739)),
    ('context','FABRIK:outward:outer_end'),
    (2,(-0.0149093,4.57715e-05,0.301311), (-0.0100452,0.00118188,0.215094)),
    (3,(-0.0249621,0.00142454,0.552304), (-0.00194427,0.00997673,0.0763262)),
    (4,(-0.0268811,0.0112717,0.627639), (0.000190318,0.00894417,0.0784918)),
    (5,(-0.0452806,0.153098,0.777591), (-0.00772715,0.100543,0.0232716)),
    (6,(-0.0530077,0.253641,0.800863), (0.191866,0.048399,-0.16889)),
    (7,(0.138858,0.30204,0.631972), (-0.0510553,0.139645,-0.135106)),
    ('context','FABRIK:outward:outer_end'),
    (8,(0.0878031,0.441685,0.496866), (-0.079459,0.0563847,-0.0261241)),
    (7,(0.138858,0.30204,0.631972), (-0.0510553,0.139645,-0.135106)),
    (6,(-0.0530077,0.253641,0.800863), (0.191866,0.048399,-0.168891)),
    (1,(0,0,0.08757), (-0.0140363,4.5758e-05,0.213739)),
    (2,(-0.0149093,4.57715e-05,0.301311), (-0.0100452,0.00118188,0.215094)),
    (3,(-0.0249621,0.00142454,0.552305), (-0.00194427,0.00997673,0.0763262)),
    (4,(-0.0268811,0.0112717,0.627639), (0.000190318,0.00894417,0.0784918)),
    (5,(-0.0452806,0.153098,0.777591), (-0.00772715,0.100543,0.0232716)),
    (6,(-0.0530078,0.253641,0.800863), (0.177654,0.0484923,-0.183757)),
    (7,(0.124647,0.302134,0.617106), (-0.168165,-0.105923,-0.0293562)),
    (8,(-0.0435185,0.196211,0.58775), (-0.0322943,-0.0803463,-0.0517397)),
    ('max_error',0.396766),
]
xlim = [0.0,1.0]
ylim = [0,1.0]
zlim = [0,1.0]

use_3d_mode = True


class Bone:
    def __init__(self, data):
        # data = (context, id, tip, bone)
        index, tip, bone = data
        self.index = str(index)
        self.x = (tip[0], tip[0] + bone[0])
        self.y = (tip[1], tip[1] + bone[1])
        self.z = (tip[2], tip[2] + bone[2])
        self.line = None

    def plot(self, ax):
        if use_3d_mode:
            self.line, = ax.plot3D(self.x, self.y, self.z)
        else:
            self.line, = ax.plot(self.x, self.y)

    def update(self, data):
        index, tip, bone = data
        self.x = (tip[0], tip[0] + bone[0])
        self.y = (tip[1], tip[1] + bone[1])
        self.z = (tip[2], tip[2] + bone[2])
        if self.line:
            self.line.set_data(self.x, self.y)
            if use_3d_mode:
                self.line.set_3d_properties(self.z)

def plot_frame(ax, frame):
    i = 0
    bones = {}
    for datum in frame:
        bone = Bone(datum)
        bone.plot(ax)
        bones[bone.index] = bone
    return bones

# create figure and axes
fig = plt.figure()
if use_3d_mode:
    ax = plt.axes(projection='3d') # 3D
else:
    ax = plt.axes() # 2D

ax.set(xlim=xlim)
ax.set(ylim=ylim)
ax.set(zlim=zlim)

# some text objects
data_x = xlim[0]
data_y = ylim[0]
data_z = zlim[0]
del_x = 0.08 * (xlim[1] - xlim[0])
del_y = 0.08 * (ylim[1] - ylim[0])
del_z = 0.08 * (zlim[1] - zlim[0])
loop_obj = ax.text(data_x + 3 * del_x, data_y + 3 * del_y, data_z + 3 * del_z, "loop=-1") 
context_obj = ax.text(data_x + 2 * del_x, data_y + 2 * del_y, data_z + 2 * del_z, "context=initial")
max_error_obj = ax.text(data_x + del_x, data_y + del_y, data_z + del_z, "max_error=???")

# create the bones
bone_index = -1
bones = plot_frame(ax, initial_data)

# configure the animation delay and update rate
interval = 800
initial_delay = int(4000 / interval)
data_index = - initial_delay

def animate(i):
    global bone_index
    global data_index
    actors = []
    if data_index > -1 and data_index < len(solution_data):
        while data_index < len(solution_data):
            data = solution_data[data_index]

            if data[0] == "context":
                context_obj.set_text(f"context={data[1]}")
            elif data[0] == "loop":
                loop_obj.set_text(f"loop={data[1]}")
            elif data[0] == "max_error":
                max_error_obj.set_text(f"max_error={data[1]}")
            else:
                bone_index = str(data[0])
                if bone_index in bones:
                    bone = bones[bone_index]
                    bone.update(data)
                data_index += 1
                break
            data_index += 1
    else:
        data_index += 1

    for bone in bones.values():
        if bone.index != bone_index:
            bone.line.set(linewidth=1.5)
        else:
            bone.line.set(linewidth=3.5)
        actors.append(bone.line)
    actors.append(context_obj)
    actors.append(loop_obj)
    actors.append(max_error_obj)

    return actors

# draw the targets
targets_x = []
targets_y = []
targets_z = []
for target in joint_configs:
    targets_x.append(target['p'][0])
    targets_y.append(target['p'][1])
    targets_z.append(target['p'][2])
if use_3d_mode:
    ax.scatter(targets_x, targets_y, targets_z)
else:
    ax.scatter(targets_x, targets_y)

# configure the animation
ani = animation.FuncAnimation(fig, animate, interval=interval, blit=True)

# show the figure
plt.show()


